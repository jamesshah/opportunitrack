services:
    redis:
        image: "redis:alpine"
        command: redis-server
        container_name: redis
        ports:
            - "6379:6379"
        networks:
            - ot-network

    server:
        build:
            context: server
            dockerfile: Dockerfile
        container_name: server
        ports:
            - "8000:8000"
        environment:
            - NODE_ENV=production
            - REDIS_HOST=redis # Use the service name 'redis' to connect
            - REDIS_PORT=6379
        env_file:
            - server/.env
        depends_on:
            redis:
                condition: service_started
            completion-queue:
                condition: service_started
            ml-engine:
                condition: service_started
        networks:
            - ot-network

    completion-queue:
        build:
            context: completion-queue-handler
            dockerfile: Dockerfile
        container_name: completion-queue
        environment:
            - NODE_ENV=production
            - REDIS_HOST=redis # Use the service name 'redis' to connect
            - REDIS_PORT=6379
        env_file:
            - completion-queue-handler/.env
        depends_on:
            redis:
                condition: service_started
        networks:
            - ot-network

    ml-engine:
        build:
            context: ml
            dockerfile: Dockerfile
        container_name: ml-engine
        command: python worker.py
        environment:
            - REDIS_HOST=redis # Use the service name 'redis' to connect
            - REDIS_PORT=6379
        depends_on:
            redis:
                condition: service_started
        networks:
            - ot-network

networks:
    ot-network:
        driver: bridge
